#!/bin/bash

# AppRun script for Pomodoro Lock AppImage
# This script sets up the environment and launches the application

# Get the directory where the AppImage is mounted
HERE="$(dirname "$(readlink -f "${0}")")"

# Set up environment
export PATH="${HERE}/usr/bin:${PATH}"
export PYTHONPATH="${HERE}/usr/lib/python3/dist-packages:${PYTHONPATH}"
export LD_LIBRARY_PATH="${HERE}/usr/lib:${LD_LIBRARY_PATH}"
export XDG_DATA_DIRS="${HERE}/usr/share:${XDG_DATA_DIRS}"
export XDG_CONFIG_DIRS="${HERE}/etc/xdg:${XDG_CONFIG_DIRS}"

# Create user directories if they don't exist
mkdir -p "${HOME}/.local/share/pomodoro-lock/config"
mkdir -p "${HOME}/.config/systemd/user"

# Copy default config if it doesn't exist
if [ ! -f "${HOME}/.local/share/pomodoro-lock/config/config.json" ]; then
    cp "${HERE}/usr/share/pomodoro-lock/config/config.json" "${HOME}/.local/share/pomodoro-lock/config/"
fi

# Install systemd service if not already installed
if [ ! -f "${HOME}/.config/systemd/user/pomodoro-lock.service" ]; then
    cp "${HERE}/usr/share/pomodoro-lock/pomodoro-lock.service" "${HOME}/.config/systemd/user/"
    # Update service file paths
    sed -i "s|/usr/local|${HERE}/usr|g" "${HOME}/.config/systemd/user/pomodoro-lock.service"
    sed -i "s|User=.*|User=${USER}|g" "${HOME}/.config/systemd/user/pomodoro-lock.service"
    sed -i "s|/home/.*|/home/${USER}|g" "${HOME}/.config/systemd/user/pomodoro-lock.service"
    sed -i "s|/run/user/.*|/run/user/$(id -u)|g" "${HOME}/.config/systemd/user/pomodoro-lock.service"
fi

# Reload systemd and enable service
systemctl --user daemon-reload 2>/dev/null || true
systemctl --user enable pomodoro-lock.service 2>/dev/null || true

# Launch the application
exec "${HERE}/usr/bin/pomodoro-lock.py" "$@" 