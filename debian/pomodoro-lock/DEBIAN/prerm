#!/bin/bash
# Pre-removal script for pomodoro-lock

set -e

log() {
    echo "[prerm] $1"
}

log "Pomodoro Lock - Pre-removal cleanup"
log "=================================="

# Function to safely kill processes for a user
kill_user_processes() {
    local username=$1
    
    # Use pkill with user specification instead of sudo -u
    pkill -u "$username" -f "pomodoro-ui-crossplatform.py" 2>/dev/null || true
    pkill -u "$username" -f "pomodoro-ui.py" 2>/dev/null || true
    pkill -u "$username" -f "pomodoro" 2>/dev/null || true
    
    # Wait a moment for processes to terminate
    sleep 1
    
    # Force kill if still running
    pkill -9 -u "$username" -f "pomodoro" 2>/dev/null || true
}

# Function to safely remove user files
remove_user_files() {
    local homedir=$1
    
    # Remove user's .local installation (as root, we can do this directly)
    rm -rf "$homedir/.local/share/pomodoro-lock" 2>/dev/null || true
    rm -f "$homedir/.local/bin/pomodoro-lock" 2>/dev/null || true
    rm -f "$homedir/.local/bin/pomodoro-service" 2>/dev/null || true
    rm -f "$homedir/.local/bin/pomodoro-configure" 2>/dev/null || true
    rm -f "$homedir/.local/share/applications/pomodoro-lock.desktop" 2>/dev/null || true
    rm -f "$homedir/.local/share/icons/hicolor/scalable/apps/pomodoro-lock.svg" 2>/dev/null || true
    
    # Remove service files
    rm -f "$homedir/.config/systemd/user/pomodoro-lock.service" 2>/dev/null || true
    rm -f "$homedir/.config/systemd/user/pomodoro.service" 2>/dev/null || true
    
    # Update icon cache if directory exists
    if [ -d "$homedir/.local/share/icons/hicolor" ]; then
        gtk-update-icon-cache -f -t "$homedir/.local/share/icons/hicolor" 2>/dev/null || true
    fi
}

# Only clean up for real users with valid login shells
while IFS=: read -r username _ uid gid userdesc homedir shell; do
    # Skip system users and users without a home directory
    if [[ $uid -ge 1000 && -d "$homedir" && $shell != "/usr/sbin/nologin" && $shell != "/bin/false" ]]; then
        log "Cleaning up for user: $username ($homedir)"
        
        # Kill processes for this user
        kill_user_processes "$username"
        
        # Remove user files
        remove_user_files "$homedir"
    fi
done < <(getent passwd)

log "âœ… All real user installations have been cleaned up."

exit 0 